##### Configuration for  PLC Client with Postgres, installed on localhost #####
datana:
  global:
    debug: true
    log:
      # уровень вывода логов
      level: DEBUG
    beauty-json: false

  plc-client:
    thread-count-max: 1
    async-timeout: 100

  plc-server:
    sleep-on-fatal-error: 30000
    # адрес PLC Сервера
    url-server: http://localhost:8080/
    ###url-server: http://192.168.1.33:8080/
    # количество опросов сервера а потом завершить работу
    # если меньше нуля тогда вечный цикл
    loop-count: 1
    # ожидание после каждого цикла в миллисекунд
    sleep-ms: 500
  database-options:
    postgresql-get-function: "? = datana.datalake.plc_get_config(?)"
    postgresql-save-function: "select datalake.plc_proxy_client_save_response(:fromJson , :threadCountMax, :threadCurrent)"
  spring:
    datasource:
      driver-class: org.postgresql.Driver
      jdbcUrl: "jdbc:postgresql://localhost:5432/datana"
      username: postgres
      password: 1
      schema: datalake

### НИЖЕ НЕ РЕДАКТИРОВАТЬ ПОЛЬЗОВАТЕЛЯМ !!!! ####
spring:
  application:
    name: PCL-Client
  main:
    web-application-type: none
    banner-mode: off
  datasource:
    driver-class: ${datana.spring.datasource.driver-class}
    driver-class-name: ${datana.spring.datasource.driver-class}
    hikari:
      auto-commit: false
      connection-timeout: 10000
      minimum-idle: ${datana.plc-client.thread-count-max}
      maximum-pool-size: ${datana.plc-client.thread-count-max}
      schema: ${datana.spring.datasource.schema}
      # max-lifetime: 600000
      idle-timeout: 6000

    password: ${datana.spring.datasource.password}
    testWhileIdle: false
    url: ${datana.spring.datasource.jdbcUrl}
    jdbcUrl: ${datana.spring.datasource.jdbcUrl}
    username: ${datana.spring.datasource.username}
    validationQuery: SELECT 1
    dbcp2:
      test-while-idle: false
      max-open-prepared-statements: ${datana.plc-client.thread-count-max}
  jpa:
    properties:
      hibernate:
        dialect: com.github.wenerme.postjava.hibernate.dialect.PostgreSQLJsonDialect
### logging ###
logging:
  level:
    root: ${datana.global.log.level}
    executableSql: ${datana.global.log.level}
    org:
      apache:
        tomcat:
          util: INFO
      hibernate:
        engine:
          transaction: ${datana.global.log.level}
        SQL: ${datana.global.log.level}
      springframework:
        web: ${datana.global.log.level}
    ru:
      datana: DEBUG
    sun: INFO
    javax: INFO
    com:
      zaxxer:
        hikari: DEBUG
  file:
    ###name: ${app.dir}/client-logs/plc-client.log
    name: /home/lin/apps/client-logs/plc-client.log
    max-size: 32 MB
    total-size-cap: 128 MB
    pattern:
      rolling-file-name: /home/lin/apps/archive-client-logs/plc-client-archive.%d{yyyy-MM-dd}.%i.gz
